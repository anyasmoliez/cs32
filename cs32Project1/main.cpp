#include "City.h"
#include "Player.h"
#include "History.h"
#include <iostream>
using namespace std;

int main()
{
	for (int nTries = 0; nTries < 5; nTries++)
	{
		City ct(2, 2);
		ct.addPlayer(1, 2);
		ct.addFlatulan(1, 1);

		// Keep trying to get the Flatulan to move down
		while (ct.nFlatulansAt(2, 1) == 0 && !ct.player()->isPassedOut())
			ct.moveFlatulans();

		if (ct.nFlatulansAt(2, 1) != 0) // the Flatulan moved
		{
			ct.history().display();
			break;
		}
		// There's a 3.2% probability that the player will pass out before
		// the Flatulan moves, so try the test again.  There's a 99.999997%
		// probability that in five tries, we'll have a test where the
		// Flatulan will move before the player passes out.
	}
	cout << "==" << endl;
}



///////////////////////////////////////////////////////////////////////////
// Manifest constants




///////////////////////////////////////////////////////////////////////////
// Type definitions
///////////////////////////////////////////////////////////////////////////









///////////////////////////////////////////////////////////////////////////
//  Auxiliary function declarations
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
//  Flatulan implementation
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
//  Player implementations
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
//  City implementations
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
//  Game implementations
///////////////////////////////////////////////////////////////////////////



///////////////////////////////////////////////////////////////////////////
//  Auxiliary function implementations
///////////////////////////////////////////////////////////////////////////



// Return a uniformly distributed random int from min to max, inclusive


///////////////////////////////////////////////////////////////////////////
//  main()
///////////////////////////////////////////////////////////////////////////

/*int main()
{
    // Create a game
    // Use this instead to create a mini-game:   Game g(3, 4, 2);
    Game g(7, 8, 25);

    // Play the game
    g.play();
}*/

///////////////////////////////////////////////////////////////////////////
//  clearScreen implementation
///////////////////////////////////////////////////////////////////////////

// DO NOT MODIFY ANY CODE BETWEEN HERE AND THE END OF THE FILE!!!
// YOU MAY MOVE TO ANOTHER FILE ALL THE CODE FROM HERE TO THE END OF FILE, BUT
// BE SURE TO MOVE *ALL* THE CODE; DON'T MODIFY OR REMOVE ANY #IFDEF, ETC.
// THE CODE IS SUITABLE FOR VISUAL C++, XCODE, AND g++/g31/g32 UNDER LINUX.

// Note to Xcode users:  clearScreen() will just write a newline instead
// of clearing the window if you launch your program from within Xcode.
// That's acceptable.  (The Xcode output window doesn't have the capability
// of being cleared.)

